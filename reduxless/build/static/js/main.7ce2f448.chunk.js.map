{"version":3,"sources":["Store.js","Actions.js","index.js","App.js"],"names":["window","uuid","Store","createContext","initialState","list","reducer","state","action","type","Object","objectSpread","concat","listItemValue","payload","filter","listItem","createNewListItem","_ref","dispatch","deleteNewListItem","_ref2","ReactDOM","render","react_default","a","createElement","props","_useReducer","useReducer","_useReducer2","slicedToArray","useDebugValue","value","Provider","children","_useContext","useContext","input","useRef","className","onSubmit","event","preventDefault","current","ref","map","index","key","onClick","document","getElementById"],"mappings":"uLAGAA,OAAOC,KAAOA,IAEP,IAAMC,EAAQC,0BAEfC,EAAe,CACnBC,KAAM,IAGR,SAASC,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,uBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEF,KAAME,EAAMF,KAAKO,OAAO,CACtBX,KAAMA,MACNY,cAAeL,EAAOM,QAAQD,kBAIpC,IAAK,mBACH,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEF,KAAME,EAAMF,KAAKU,OACf,SAAAC,GAAQ,OAAIA,EAASf,OAASO,EAAOM,QAAQb,SAInD,QACE,OAAOM,GC/BN,IAAMU,EAAoB,SAAAC,GAC/B,OAAOC,EADmDD,EAAxBC,UAClB,CACdV,KAAM,uBACNK,QAHwDI,EAAdJ,WAOjCM,EAAoB,SAAAC,GAC/B,OAAOF,EADmDE,EAAxBF,UAClB,CACdV,KAAM,mBACNK,QAHwDO,EAAdP,iBCD9CQ,IAASC,OACPC,EAAAC,EAAAC,cF4BK,SAAuBC,GAAO,IAAAC,EACTC,qBAAWvB,EAASF,GADX0B,EAAApB,OAAAqB,EAAA,EAAArB,CAAAkB,EAAA,GAC5BrB,EAD4BuB,EAAA,GACrBX,EADqBW,EAAA,GAGnCE,wBAAczB,GACd,IAAM0B,EAAQ,CAAE1B,QAAOY,YAEvB,OAAOK,EAAAC,EAAAC,cAACxB,EAAMgC,SAAP,CAAgBD,MAAOA,GAAQN,EAAMQ,WElC5C,KACEX,EAAAC,EAAAC,cCFW,WAAe,IAAAU,EACAC,qBAAWnC,GAA/BK,EADoB6B,EACpB7B,MAAOY,EADaiB,EACbjB,SAETmB,EAAQC,iBAAO,MAyBrB,OACEf,EAAAC,EAAAC,cAAA,QAAMc,UAAU,OACdhB,EAAAC,EAAAC,cAAA,MAAIc,UAAU,cAAd,cACAhB,EAAAC,EAAAC,cAAA,QAAMc,UAAU,YAAYC,SA3BX,SAAAC,GACnBA,EAAMC,iBAEN,IAAM9B,EAAgByB,EAAMM,QAAQX,MAEd,KAAlBpB,IACFI,EAAkB,CAChBE,WACAL,QAAS,CAAED,mBAGbyB,EAAMM,QAAQX,MAAQ,MAiBpBT,EAAAC,EAAAC,cAAA,SAAOjB,KAAK,OAAO+B,UAAU,aAAaK,IAAKP,IAC/Cd,EAAAC,EAAAC,cAAA,SACEjB,KAAK,SACL+B,UAAU,oBACVP,MAAM,iBAGVT,EAAAC,EAAAC,cAAA,MAAIc,UAAU,aACXjC,EAAMF,KAAKyC,IAAI,SAAC9B,EAAU+B,GAAX,OACdvB,EAAAC,EAAAC,cAAA,MAAIc,UAAU,iBAAiBQ,IAAG,aAAApC,OAAemC,IAC9C/B,EAASH,cACVW,EAAAC,EAAAC,cAAA,UACEc,UAAU,wBACVS,QAAS,kBA1BIhD,EA0BmBe,EAASf,UAzBnDmB,EAAkB,CAChBD,WACAL,QAAS,CACPb,UAJmB,IAAAA,IAwBf,gBDzCR,OAEFiD,SAASC,eAAe","file":"static/js/main.7ce2f448.chunk.js","sourcesContent":["import React, { createContext, useReducer, useDebugValue } from \"react\";\nimport uuid from \"web-uuid-js\";\n\nwindow.uuid = uuid;\n\nexport const Store = createContext();\n\nconst initialState = {\n  list: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CREATE_NEW_LIST_ITEM\":\n      return {\n        ...state,\n        list: state.list.concat({\n          uuid: uuid(),\n          listItemValue: action.payload.listItemValue\n        })\n      };\n\n    case \"DELETE_LIST_ITEM\":\n      return {\n        ...state,\n        list: state.list.filter(\n          listItem => listItem.uuid !== action.payload.uuid\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useDebugValue(state);\n  const value = { state, dispatch };\n\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","export const createNewListItem = ({ dispatch, payload }) => {\n  return dispatch({\n    type: \"CREATE_NEW_LIST_ITEM\",\n    payload\n  });\n};\n\nexport const deleteNewListItem = ({ dispatch, payload }) => {\n  return dispatch({\n    type: \"DELETE_LIST_ITEM\",\n    payload\n  });\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { StoreProvider } from \"./Store\";\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById(\"root\")\n);\n","import React, { useRef, useContext } from \"react\";\n\nimport { Store } from \"./Store\";\nimport { createNewListItem, deleteNewListItem } from \"./Actions\";\nimport \"./app.scss\";\n\nexport default function App() {\n  const { state, dispatch } = useContext(Store);\n\n  const input = useRef(null);\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    const listItemValue = input.current.value;\n\n    if (listItemValue !== \"\") {\n      createNewListItem({\n        dispatch,\n        payload: { listItemValue }\n      });\n\n      input.current.value = \"\";\n    }\n  };\n\n  const onDeleteListItem = uuid => {\n    deleteNewListItem({\n      dispatch,\n      payload: {\n        uuid\n      }\n    });\n  };\n\n  return (\n    <main className=\"app\">\n      <h1 className=\"app__title\">To do list</h1>\n      <form className=\"app__form\" onSubmit={onFormSubmit}>\n        <input type=\"text\" className=\"app__input\" ref={input} />\n        <input\n          type=\"submit\"\n          className=\"app__input-submit\"\n          value=\"Add to list\"\n        />\n      </form>\n      <ul className=\"app__list\">\n        {state.list.map((listItem, index) => (\n          <li className=\"app__list-item\" key={`list-item-${index}`}>\n            {listItem.listItemValue}\n            <button\n              className=\"app__list-item-delete\"\n              onClick={() => onDeleteListItem(listItem.uuid)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n}\n"],"sourceRoot":""}